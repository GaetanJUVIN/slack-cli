#!/usr/bin/env ruby

require 'rubygems'
require 'bundler/setup'
require 'yaml'
require 'slack-ruby-client'
require 'colorize'

if File.exist?(ENV['HOME'] + '/.slack-cli.yml') == false
  puts 'echo "token: YOUR TOKEN" > ~/.slack-cli.yml'
  exit(1)
end

def usage
  puts 'Usage: slack-cli "slack-name" "channel|@user" "message"'
  exit(1)
end


if [2, 3].include?(ARGV.count) == false
  usage
end

slack_name = ARGV[0]

channel    = ARGV[1]

if ARGV.count == 3
  message    = ARGV[2]
elsif STDIN.tty? == false
  message  = $stdin.read
else
  usage
end

options = YAML.load_file(ENV['HOME'] + '/.slack-cli.yml')
if options[slack_name] == nil or options[slack_name]['token'] == nil
  puts 'Cannot found token in ~/.slack-cli.yml'
  exit(1)
end

client = Slack::Web::Client.new(token: options[slack_name]['token'])
client.auth_test

has_been_sent = false

nbr_try = 0
begin
  params = {channel: channel, text: message, as_user: true}
  if options[slack_name]['as_user'] != nil and options[slack_name]['as_user'] == false
    params[:as_user] = false
    params[:username] = options[slack_name]['as_user_username'] if options[slack_name]['as_user_username']
    params[:icon_emoji] = options[slack_name]['as_user_emoji']  if options[slack_name]['as_user_emoji']
  end
  client.chat_postMessage(params)
rescue Exception => e
	if nbr_try == 0 and e.message == 'channel_not_found'
		channel = "@#{channel}"
		retry
	end
	nbr_try += 1
	puts e.message
  has_been_sent = false
end

if has_been_sent
  puts 'SENT'.light_green
end
